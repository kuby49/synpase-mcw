{
	"name": "Exercise_7_DynamicDataMasking",
	"properties": {
		"content": {
			"query": "----- Dynamic Data Masking (DDM) ---------\n/*  Dynamic data masking helps prevent unauthorized access to sensitive data by enabling customers\n    to designate how much of the sensitive data to reveal with minimal impact on the application layer.\n    Let see how */\n\n/* Scenario: WWI has identified sensitive information in the CustomerInfo table. They would like us to\n    obfuscate the CreditCard and Email columns of the CustomerInfo table to DataAnalysts */\n\n-- Step:1 Let's first get a view of CustomerInfo table.\nSELECT TOP (100) * FROM wwi_mcw.CustomerInfo;\n\n-- Step:2 Let's confirm that there are no Dynamic Data Masking (DDM) applied on columns.\nSELECT c.name, tbl.name as table_name, c.is_masked, c.masking_function  \nFROM sys.masked_columns AS c  \nJOIN sys.tables AS tbl\n    ON c.[object_id] = tbl.[object_id]  \nWHERE is_masked = 1\n    AND tbl.name = 'CustomerInfo';\n-- No results returned verify that no data masking has been done yet.\n\n-- Step:3 Now let's mask 'CreditCard' and 'Email' Column of 'CustomerInfo' table.\nALTER TABLE wwi_mcw.CustomerInfo  \nALTER COLUMN [CreditCard] ADD MASKED WITH (FUNCTION = 'partial(0,\"XXXX-XXXX-XXXX-\",4)');\nGO\nALTER TABLE wwi_mcw.CustomerInfo\nALTER COLUMN Email ADD MASKED WITH (FUNCTION = 'email()');\nGO\n-- The columns are successfully masked.\n\n-- Step:4 Let's see Dynamic Data Masking (DDM) applied on the two columns.\nSELECT c.name, tbl.name as table_name, c.is_masked, c.masking_function  \nFROM sys.masked_columns AS c  \nJOIN sys.tables AS tbl\n    ON c.[object_id] = tbl.[object_id]  \nWHERE is_masked = 1\n    AND tbl.name ='CustomerInfo';\n\n-- Step:5 Now, let's grant SELECT permission to 'DataAnalystMiami' on the 'CustomerInfo' table.\nGRANT SELECT ON wwi_mcw.CustomerInfo TO DataAnalystMiami;  \n\n-- Step:6 Logged in as  'DataAnalystMiami' let's execute the select query and view the result.\nEXECUTE AS USER = 'DataAnalystMiami';  \nSELECT * FROM wwi_mcw.CustomerInfo;\n\n-- Step:7 Let's remove the data masking using UNMASK permission\nGRANT UNMASK TO DataAnalystMiami;\nEXECUTE AS USER = 'DataAnalystMiami';  \nSELECT *\nFROM wwi_mcw.CustomerInfo;\nrevert;\nREVOKE UNMASK TO DataAnalystMiami;  \n\n----step:8 Reverting all the changes back to as it was.\nALTER TABLE wwi_mcw.CustomerInfo\nALTER COLUMN CreditCard DROP MASKED;\nGO\nALTER TABLE wwi_mcw.CustomerInfo\nALTER COLUMN Email DROP MASKED;\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "SQLPool01",
				"type": "SqlPool"
			}
		},
		"type": "SqlQuery"
	}
}